version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: greenhouse-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - greenhouse-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: greenhouse-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - greenhouse-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: greenhouse-backend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
    depends_on:
      - redis
      - rabbitmq
    volumes:
      - backend_logs:/app/logs
    networks:
      - greenhouse-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: greenhouse-frontend
    environment:
      - DISPLAY=${DISPLAY}
      - XAUTHORITY=${XAUTHORITY}
      - BACKEND_URL=http://backend:3000
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
      - ${XAUTHORITY}:${XAUTHORITY}
      - frontend_logs:/app/logs
    networks:
      - greenhouse-network
    stdin_open: true
    tty: true


volumes:
  redis_data:
  rabbitmq_data:
  backend_logs:
  frontend_logs:

networks:
  greenhouse-network:
    driver: bridge